package ru.job4j.ood.ocp;

public class Cashier {
    private String name;

    public Cashier(String name) {
        this.name = name;
    }

    public void acceptPayment(CashPaymentType cash, int cost) {
        cash.pay(cost);
    }

    public class CashPaymentType {
        public void pay(int money) {
        }
    }

     /*
    Имеем класс "Cashier", который имеет метод "acceptPayment".
    Метод принимает способо оплаты. По реализации видно, что кассир может принять только оплату наличными.
    В наше время, такой способо оплаты, не является самым актуальным,
    и если мы оставим как есть, можно потерять солидную долю клиентов.
    Каким образом можно исправить ситуацию ?
    Можно просто изменить метод "acceptPayment", который будет принимать наиболее популярный способ оплаты.
    Такое решение не совсем удачное т.к мы нарушаем принцип OCP об "неизменяемости объекта", к тому же
    кассир всю равно будет принимать только один способ оплаты.
    Можно сделать перегрузку метода "acceptPayment", таким образом кассир сможет принимать различные способы оплаты.
    Такой способ нельзя назвать удачным, поскольку при появлении нового способа оплаты, мы будем вынуждены создавать
    новые методы для работы с такой оплатой, что крайне не удобно.
    Удобное решение будет, будет создать interface "paymentType", с его помощью мы реализуем классы, которые
    будут описывать различные способы оплаты. Один метод "acceptPayment"  будет принимать "paymentType".
    Таким образом, мы можем создавать новые типы оплаты, наш кассир сможет с ними работать без доп изменнеий в коде.
     */
}
